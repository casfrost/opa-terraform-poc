name: "Open Policy Agent Workflow"

# This workflow only triggers when code is pushed to a branch called test/*

on:
  push:
    branches: "test/*"

defaults:
    run:
      shell: bash
      
jobs:
  #########################################################################
  # Workflow job to initialize, format, validate and check Terraform code #
  #########################################################################
  terraform-preplan:
    runs-on: ubuntu-latest
    environment: NonProduction
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}

    steps:
      - uses: actions/checkout@v2
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
      - name: Terraform Init
        run: terraform init
        working-directory: .infrastructure
      - name: Terraform format
        run: terraform fmt -check --recursive
        working-directory: .infrastructure
      - name: Terraform Validate
        run: terraform validate
        working-directory: .infrastructure

  ##############################################################
  # Terraform plan job that uploads a terraform plan artifact  #
  ##############################################################
  terraform-plan:
    needs: terraform-preplan
    runs-on: ubuntu-latest
    environment: NonProduction
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}

    steps:
      - uses: actions/checkout@v2
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init
        working-directory: .infrastructure
      - name: Terraform Plan
        run: terraform plan -no-color -out=terraform.plan
        working-directory: .infrastructure

      - name: Upload Terraform artifacts after successful plan
        uses: actions/upload-artifact@v3
        with:
          name: terraform
          path: |
            .infrastructure/.terraform
            .infrastructure/*.tf
            .infrastructure/*.lock.hcl
            .infrastructure/terraform.plan
          if-no-files-found: error

  policy-checks:
    needs: terraform-plan
    runs-on: ubuntu-latest
    environment: NonProduction
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}

    steps:
    - name: Download artifact
      uses: actions/download-artifact@v2
      with:
        name: terraform
        path: ./.infrastructure
    
    - name: Install Open Policy Agent
      # Remember to use working-directory .infrastructure
