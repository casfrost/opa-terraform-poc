name: "Infrastructure Workflow"

# This workflow only triggers when code is pushed to a branch called infrastructure/*

# Activate when workflow is working
#on:
#  push:
#    paths:
#      - ".infrastructure/**"

on:
  push:
    branches:
     - main
     - test/*

defaults:
    run:
      shell: bash
      
jobs:
  terraform-preplan:
    runs-on: ubuntu-latest
    environment: NonProduction
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}

    steps:
      - uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init
        working-directory: .infrastructure

      - name: Terraform format
        run: terraform fmt -check --recursive
        working-directory: .infrastructure

      - name: Terraform Validate
        run: terraform validate
        working-directory: .infrastructure
  
  terraform-plan:
    needs: terraform-preplan
    runs-on: ubuntu-latest
    environment: NonProduction
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}

    steps:
      - uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init
        working-directory: .infrastructure

      - name: Terraform Plan
        run: terraform plan -no-color -out=terraform.plan
        working-directory: .infrastructure

      - name: Upload Terraform artifacts
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: terraform
          path: |
            .infrastructure/.terraform
            .infrastructure/*.tf
            .infrastructure/*.lock.hcl
            .infrastructure/terraform.plan
          if-no-files-found: error
      
      # Policy check of terraform plan with OPA
  compliance-tests:
    needs: terraform-plan
    runs-on: ubuntu-latest 
    environment: NonProduction
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Run Terraform Init
        run: terraform init
        working-directory: .infrastructure
      - name: Get Terraform Plan
        run: terraform plan -out=terraform.plan
        working-directory: .infrastructure
      - name: Convert Terraform Plan to JSON
        run: terraform show -json terraform.plan > ../tfplan.json
        working-directory: .infrastructure
      - name: Setup OPA
        uses: open-policy-agent/setup-opa@v1
        with:
          version: latest
      - name: Run OPA test 1
        run: opa eval --fail-defined --data tests/main.rego --input tfplan.json "data.tfplan.skuRule" --format pretty
        continue-on-error: true
      - name: Run OPA test 2
        run: opa eval --fail-defined --data tests/main.rego --input tfplan.json "data.tfplan.locationRule" --format pretty
        continue-on-error: true
        
  terraform-apply:
    needs: compliance-tests
    runs-on: ubuntu-latest
    environment: NonProduction
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
    steps: 
      - name: Get prepared plan
        uses: actions/download-artifact@v2
        with:
          name: terraform
          path: ./.infrastructure

      - run: chmod -R u+x .terraform
        working-directory: .infrastructure

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform apply
        run: terraform apply -auto-approve ./terraform.plan
        working-directory: .infrastructure

